{"env_info": "sys.platform: linux\nPython: 3.7.13 (default, Mar 29 2022, 02:18:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA RTX A6000\nCUDA_HOME: /usr/local/cuda-11.1\nNVCC: Build cuda_11.1.TC455_06.29069683_0\nGCC: gcc (GCC) 6.1.0\nPyTorch: 1.10.1+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.11.2+cu111\nOpenCV: 4.8.1\nMMCV: 1.4.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMDetection: 2.14.0\nMMSegmentation: 0.14.1\nMMDetection3D: 0.17.1+unknown", "config": "point_cloud_range = [-50, -50, -5.0, 50, 50, 3.0]\nclass_names = [\n    'barrier', 'bicycle', 'bus', 'car', 'construction_vehicle', 'motorcycle',\n    'pedestrian', 'traffic_cone', 'trailer', 'truck', 'driveable_surface',\n    'other_flat', 'sidewalk', 'terrain', 'manmade', 'vegetation'\n]\ndataset_type = 'CustomNuScenesOccDataset'\ndata_root = '/mnt/sda-20T/rj/data/nuscenes'\ninput_modality = dict(\n    use_lidar=False,\n    use_camera=True,\n    use_radar=False,\n    use_map=False,\n    use_external=True)\nfile_client_args = dict(backend='disk')\ntrain_pipeline = [\n    dict(type='LoadMultiViewImageFromFiles', to_float32=True),\n    dict(type='PhotoMetricDistortionMultiViewImage'),\n    dict(type='LoadOccupancy', use_semantic=True),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'barrier', 'bicycle', 'bus', 'car', 'construction_vehicle',\n            'motorcycle', 'pedestrian', 'traffic_cone', 'trailer', 'truck',\n            'driveable_surface', 'other_flat', 'sidewalk', 'terrain',\n            'manmade', 'vegetation'\n        ],\n        with_label=False),\n    dict(type='CustomCollect3D', keys=['img', 'gt_occ'])\n]\ntest_pipeline = [\n    dict(type='LoadMultiViewImageFromFiles', to_float32=True),\n    dict(type='LoadOccupancy', use_semantic=True),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'barrier', 'bicycle', 'bus', 'car', 'construction_vehicle',\n            'motorcycle', 'pedestrian', 'traffic_cone', 'trailer', 'truck',\n            'driveable_surface', 'other_flat', 'sidewalk', 'terrain',\n            'manmade', 'vegetation'\n        ],\n        with_label=False),\n    dict(type='CustomCollect3D', keys=['img', 'gt_occ'])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=10,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'\n        ],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=16,\n    train=dict(\n        type='CustomNuScenesOccDataset',\n        data_root='/mnt/sda-20T/rj/data/nuscenes',\n        ann_file=\n        '/mnt/sda-20T/rj/data/nuscenes/anno_file/SurroundOcc/nuscenes_infos_train.pkl',\n        pipeline=[\n            dict(type='LoadMultiViewImageFromFiles', to_float32=True),\n            dict(type='PhotoMetricDistortionMultiViewImage'),\n            dict(type='LoadOccupancy', use_semantic=True),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'barrier', 'bicycle', 'bus', 'car', 'construction_vehicle',\n                    'motorcycle', 'pedestrian', 'traffic_cone', 'trailer',\n                    'truck', 'driveable_surface', 'other_flat', 'sidewalk',\n                    'terrain', 'manmade', 'vegetation'\n                ],\n                with_label=False),\n            dict(type='CustomCollect3D', keys=['img', 'gt_occ'])\n        ],\n        classes=[\n            'barrier', 'bicycle', 'bus', 'car', 'construction_vehicle',\n            'motorcycle', 'pedestrian', 'traffic_cone', 'trailer', 'truck',\n            'driveable_surface', 'other_flat', 'sidewalk', 'terrain',\n            'manmade', 'vegetation'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=False,\n        box_type_3d='LiDAR',\n        use_valid_flag=True,\n        occ_size=[200, 200, 16],\n        pc_range=[-50, -50, -5.0, 50, 50, 3.0],\n        use_semantic=True),\n    val=dict(\n        type='CustomNuScenesOccDataset',\n        ann_file=\n        '/mnt/sda-20T/rj/data/nuscenes/anno_file/SurroundOcc/nuscenes_infos_val.pkl',\n        pipeline=[\n            dict(type='LoadMultiViewImageFromFiles', to_float32=True),\n            dict(type='LoadOccupancy', use_semantic=True),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'barrier', 'bicycle', 'bus', 'car', 'construction_vehicle',\n                    'motorcycle', 'pedestrian', 'traffic_cone', 'trailer',\n                    'truck', 'driveable_surface', 'other_flat', 'sidewalk',\n                    'terrain', 'manmade', 'vegetation'\n                ],\n                with_label=False),\n            dict(type='CustomCollect3D', keys=['img', 'gt_occ'])\n        ],\n        classes=[\n            'barrier', 'bicycle', 'bus', 'car', 'construction_vehicle',\n            'motorcycle', 'pedestrian', 'traffic_cone', 'trailer', 'truck',\n            'driveable_surface', 'other_flat', 'sidewalk', 'terrain',\n            'manmade', 'vegetation'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        data_root='/mnt/sda-20T/rj/data/nuscenes',\n        occ_size=[200, 200, 16],\n        pc_range=[-50, -50, -5.0, 50, 50, 3.0],\n        use_semantic=True),\n    test=dict(\n        type='CustomNuScenesOccDataset',\n        data_root='/mnt/sda-20T/rj/data/nuscenes',\n        ann_file=\n        '/mnt/sda-20T/rj/data/nuscenes/anno_file/SurroundOcc/nuscenes_infos_val.pkl',\n        pipeline=[\n            dict(type='LoadMultiViewImageFromFiles', to_float32=True),\n            dict(type='LoadOccupancy', use_semantic=True),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'barrier', 'bicycle', 'bus', 'car', 'construction_vehicle',\n                    'motorcycle', 'pedestrian', 'traffic_cone', 'trailer',\n                    'truck', 'driveable_surface', 'other_flat', 'sidewalk',\n                    'terrain', 'manmade', 'vegetation'\n                ],\n                with_label=False),\n            dict(type='CustomCollect3D', keys=['img', 'gt_occ'])\n        ],\n        classes=[\n            'barrier', 'bicycle', 'bus', 'car', 'construction_vehicle',\n            'motorcycle', 'pedestrian', 'traffic_cone', 'trailer', 'truck',\n            'driveable_surface', 'other_flat', 'sidewalk', 'terrain',\n            'manmade', 'vegetation'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        occ_size=[200, 200, 16],\n        pc_range=[-50, -50, -5.0, 50, 50, 3.0],\n        use_semantic=True),\n    shuffler_sampler=dict(type='DistributedGroupSampler'),\n    nonshuffler_sampler=dict(type='DistributedSampler'))\nevaluation = dict(\n    interval=1,\n    pipeline=[\n        dict(type='LoadMultiViewImageFromFiles', to_float32=True),\n        dict(type='LoadOccupancy', use_semantic=True),\n        dict(\n            type='NormalizeMultiviewImage',\n            mean=[103.53, 116.28, 123.675],\n            std=[1.0, 1.0, 1.0],\n            to_rgb=False),\n        dict(type='PadMultiViewImage', size_divisor=32),\n        dict(\n            type='DefaultFormatBundle3D',\n            class_names=[\n                'barrier', 'bicycle', 'bus', 'car', 'construction_vehicle',\n                'motorcycle', 'pedestrian', 'traffic_cone', 'trailer', 'truck',\n                'driveable_surface', 'other_flat', 'sidewalk', 'terrain',\n                'manmade', 'vegetation'\n            ],\n            with_label=False),\n        dict(type='CustomCollect3D', keys=['img', 'gt_occ'])\n    ])\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=1,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './work_dirs/surroundocc'\nload_from = '/home/renjun/program/occupancy_network/myproject/myocc/ckpts/r101_dcn_fcos3d_pretrain.pth'\nresume_from = None\nworkflow = [('train', 1)]\nplugin = True\nplugin_dir = 'projects/mmdet3d_plugin/'\nocc_size = [200, 200, 16]\nuse_semantic = True\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\n_dim_ = [128, 256, 512]\n_ffn_dim_ = [256, 512, 1024]\nvolume_h_ = [100, 50, 25]\nvolume_w_ = [100, 50, 25]\nvolume_z_ = [8, 4, 2]\n_num_points_ = [2, 4, 8]\n_num_layers_ = [1, 3, 6]\nmodel = dict(\n    type='SurroundOcc',\n    use_grid_mask=True,\n    use_semantic=True,\n    img_backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN2d', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        dcn=dict(type='DCNv2', deform_groups=1, fallback_on_stride=False),\n        stage_with_dcn=(False, False, True, True)),\n    img_neck=dict(\n        type='FPN',\n        in_channels=[512, 1024, 2048],\n        out_channels=512,\n        start_level=0,\n        add_extra_convs='on_output',\n        num_outs=3,\n        relu_before_extra_convs=True),\n    pts_bbox_head=dict(\n        type='OccHead',\n        volume_h=[100, 50, 25],\n        volume_w=[100, 50, 25],\n        volume_z=[8, 4, 2],\n        num_query=900,\n        num_classes=17,\n        conv_input=[512, 256, 256, 128, 128, 64, 64],\n        conv_output=[256, 256, 128, 128, 64, 64, 32],\n        out_indices=[0, 2, 4, 6],\n        upsample_strides=[1, 2, 1, 2, 1, 2, 1],\n        embed_dims=[128, 256, 512],\n        img_channels=[512, 512, 512],\n        use_semantic=True,\n        transformer_template=dict(\n            type='PerceptionTransformer',\n            embed_dims=[128, 256, 512],\n            encoder=dict(\n                type='OccEncoder',\n                num_layers=[1, 3, 6],\n                pc_range=[-50, -50, -5.0, 50, 50, 3.0],\n                return_intermediate=False,\n                transformerlayers=dict(\n                    type='OccLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='SpatialCrossAttention',\n                            pc_range=[-50, -50, -5.0, 50, 50, 3.0],\n                            deformable_attention=dict(\n                                type='MSDeformableAttention3D',\n                                embed_dims=[128, 256, 512],\n                                num_points=[2, 4, 8],\n                                num_levels=1),\n                            embed_dims=[128, 256, 512])\n                    ],\n                    feedforward_channels=[256, 512, 1024],\n                    ffn_dropout=0.1,\n                    embed_dims=[128, 256, 512],\n                    conv_num=2,\n                    operation_order=('cross_attn', 'norm', 'ffn', 'norm',\n                                     'conv'))))))\nfind_unused_parameters = True\noptimizer = dict(\n    type='AdamW',\n    lr=0.0002,\n    paramwise_cfg=dict(\n        bypass_duplicate=True,\n        custom_keys=dict(img_backbone=dict(lr_mult=0.1))),\n    weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    min_lr_ratio=0.001)\ntotal_epochs = 24\nrunner = dict(type='EpochBasedRunner', max_epochs=24)\ngpu_ids = range(0, 1)\n", "seed": 0, "exp_name": "surroundocc.py"}
